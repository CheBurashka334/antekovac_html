{"version":3,"sources":["webpack:///../~/imageviewer/dist/viewer.js","webpack:///./js/viewers.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA2B;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gCAA+B;AAC/B,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA,kCAAiC;;AAEjC;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB,mBAAkB;AAClB,iDAAgD;AAChD,iDAAgD;AAChD,mCAAkC;AAClC,6BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mDAAkD;AAClD,QAAO;;AAEP;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,aAAa;AAC5B;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,aAAa;AAC5B,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW;AACX,UAAS;;AAET;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA,UAAS;AACT;AACA;;AAEA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;;;;ACz4DD,KAAI,UAAU;AACV,OAAK,eAAY;AACnB,KAAE,EAAF,CAAK,MAAL,CAAY,WAAZ,CAAwB;AACvB,cAAU,KAAV;AACA,aAAS,KAAT;AACA,eAAW,KAAX;AACA,iBAAa,KAAb;AACA,gBAAY,KAAZ;AACA,kBAAc,KAAd;IAND,EADmB;AASnB,KAAE,YAAF,EAAgB,MAAhB,GATmB;AAUnB,KAAE,oBAAF,EAAwB,EAAxB,CAA2B,OAA3B,EAAoC,YAAU;AAC7C,QAAI,MAAM,gDAA8C,EAAE,IAAF,EAAQ,IAAR,CAAa,cAAb,CAA9C,GAA2E,KAA3E,CADmC;AAE7C,MAAE,qBAAF,EAAyB,IAAzB,CAA8B,GAA9B,EAF6C;AAG7C,QAAI,MAAJ,CAAW,QAAX,EAH6C;AAI7C,MAAE,oBAAF,EAAwB,MAAxB,CAA+B,MAA/B,EAJ6C;IAAV,CAApC,CAVmB;AAgBnB,KAAE,eAAF,EAAmB,EAAnB,CAAsB,OAAtB,EAA+B,UAAS,CAAT,EAAW;AACzC,MAAE,eAAF,GADyC;AAEzC,QAAI,MAAJ,CAAW,MAAX,EAFyC;IAAX,CAA/B,CAhBmB;GAAZ;EADL;;AAwBJ,QAAO,OAAP,GAAiB,OAAjB,C","file":"2.2.js","sourcesContent":["/*!\n * Viewer v0.5.1\n * https://github.com/fengyuanchen/viewer\n *\n * Copyright (c) 2015-2016 Fengyuan Chen\n * Released under the MIT license\n *\n * Date: 2016-03-11T07:57:59.486Z\n */\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as anonymous module.\n    define('viewer', ['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    // Node / CommonJS\n    factory(require('jquery'));\n  } else {\n    // Browser globals.\n    factory(jQuery);\n  }\n})(function ($) {\n\n  'use strict';\n\n  var $window = $(window);\n  var $document = $(document);\n\n  // Constants\n  var NAMESPACE = 'viewer';\n  var ELEMENT_VIEWER = document.createElement(NAMESPACE);\n\n  // Classes\n  var CLASS_FIXED = 'viewer-fixed';\n  var CLASS_OPEN = 'viewer-open';\n  var CLASS_SHOW = 'viewer-show';\n  var CLASS_HIDE = 'viewer-hide';\n  var CLASS_HIDE_XS_DOWN = 'viewer-hide-xs-down';\n  var CLASS_HIDE_SM_DOWN = 'viewer-hide-sm-down';\n  var CLASS_HIDE_MD_DOWN = 'viewer-hide-md-down';\n  var CLASS_FADE = 'viewer-fade';\n  var CLASS_IN = 'viewer-in';\n  var CLASS_MOVE = 'viewer-move';\n  var CLASS_ACTIVE = 'viewer-active';\n  var CLASS_INVISIBLE = 'viewer-invisible';\n  var CLASS_TRANSITION = 'viewer-transition';\n  var CLASS_FULLSCREEN = 'viewer-fullscreen';\n  var CLASS_FULLSCREEN_EXIT = 'viewer-fullscreen-exit';\n  var CLASS_CLOSE = 'viewer-close';\n\n  // Selectors\n  var SELECTOR_IMG = 'img';\n\n  // Events\n  var EVENT_MOUSEDOWN = 'mousedown touchstart pointerdown MSPointerDown';\n  var EVENT_MOUSEMOVE = 'mousemove touchmove pointermove MSPointerMove';\n  var EVENT_MOUSEUP = 'mouseup touchend touchcancel pointerup pointercancel MSPointerUp MSPointerCancel';\n  var EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\n  var EVENT_TRANSITIONEND = 'transitionend';\n  var EVENT_LOAD = 'load.' + NAMESPACE;\n  var EVENT_KEYDOWN = 'keydown.' + NAMESPACE;\n  var EVENT_CLICK = 'click.' + NAMESPACE;\n  var EVENT_RESIZE = 'resize.' + NAMESPACE;\n  var EVENT_BUILD = 'build.' + NAMESPACE;\n  var EVENT_BUILT = 'built.' + NAMESPACE;\n  var EVENT_SHOW = 'show.' + NAMESPACE;\n  var EVENT_SHOWN = 'shown.' + NAMESPACE;\n  var EVENT_HIDE = 'hide.' + NAMESPACE;\n  var EVENT_HIDDEN = 'hidden.' + NAMESPACE;\n  var EVENT_VIEW = 'view.' + NAMESPACE;\n  var EVENT_VIEWED = 'viewed.' + NAMESPACE;\n\n  // Supports\n  var SUPPORT_TRANSITION = typeof ELEMENT_VIEWER.style.transition !== 'undefined';\n\n  // Others\n  var round = Math.round;\n  var sqrt = Math.sqrt;\n  var abs = Math.abs;\n  var min = Math.min;\n  var max = Math.max;\n  var num = Number;\n\n  function isString(s) {\n    return typeof s === 'string';\n  }\n\n  function isNumber(n) {\n    return typeof n === 'number' && !isNaN(n);\n  }\n\n  function isUndefined(u) {\n    return typeof u === 'undefined';\n  }\n\n  function toArray(obj, offset) {\n    var args = [];\n\n    if (isNumber(offset)) { // It's necessary for IE8\n      args.push(offset);\n    }\n\n    return args.slice.apply(obj, args);\n  }\n\n  // Custom proxy to avoid jQuery's guid\n  function proxy(fn, context) {\n    var args = toArray(arguments, 2);\n\n    return function () {\n      return fn.apply(context, args.concat(toArray(arguments)));\n    };\n  }\n\n  function getTransform(options) {\n    var transforms = [];\n    var rotate = options.rotate;\n    var scaleX = options.scaleX;\n    var scaleY = options.scaleY;\n\n    if (isNumber(rotate)) {\n      transforms.push('rotate(' + rotate + 'deg)');\n    }\n\n    if (isNumber(scaleX) && isNumber(scaleY)) {\n      transforms.push('scale(' + scaleX + ',' + scaleY + ')');\n    }\n\n    return transforms.length ? transforms.join(' ') : 'none';\n  }\n\n  // Force reflow to enable CSS3 transition\n  function forceReflow(element) {\n    return element.offsetWidth;\n  }\n\n  // e.g.: http://domain.com/path/to/picture.jpg?size=1280×960 -> picture.jpg\n  function getImageName(url) {\n    return isString(url) ? url.replace(/^.*\\//, '').replace(/[\\?&#].*$/, '') : '';\n  }\n\n  function getImageSize(image, callback) {\n    var newImage;\n\n    // Modern browsers\n    if (image.naturalWidth) {\n      return callback(image.naturalWidth, image.naturalHeight);\n    }\n\n    // IE8: Don't use `new Image()` here\n    newImage = document.createElement('img');\n\n    newImage.onload = function () {\n      callback(this.width, this.height);\n    };\n\n    newImage.src = image.src;\n  }\n\n  function getTouchesCenter(touches) {\n    var length = touches.length;\n    var pageX = 0;\n    var pageY = 0;\n\n    if (length) {\n      $.each(touches, function (i, touch) {\n        pageX += touch.pageX;\n        pageY += touch.pageY;\n      });\n\n      pageX /= length;\n      pageY /= length;\n    }\n\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n\n  function getResponsiveClass(option) {\n    switch (option) {\n      case 2:\n        return CLASS_HIDE_XS_DOWN;\n\n      case 3:\n        return CLASS_HIDE_SM_DOWN;\n\n      case 4:\n        return CLASS_HIDE_MD_DOWN;\n    }\n  }\n\n  function Viewer(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, Viewer.DEFAULTS, $.isPlainObject(options) && options);\n    this.isImg = false;\n    this.isBuilt = false;\n    this.isShown = false;\n    this.isViewed = false;\n    this.isFulled = false;\n    this.isPlayed = false;\n    this.wheeling = false;\n    this.playing = false;\n    this.fading = false;\n    this.tooltiping = false;\n    this.transitioning = false;\n    this.action = false;\n    this.target = false;\n    this.timeout = false;\n    this.index = 0;\n    this.length = 0;\n    this.init();\n  }\n\n  Viewer.prototype = {\n    constructor: Viewer,\n\n    init: function () {\n      var options = this.options;\n      var $this = this.$element;\n      var isImg = $this.is(SELECTOR_IMG);\n      var $images = isImg ? $this : $this.find(SELECTOR_IMG);\n      var length = $images.length;\n      var ready = $.proxy(this.ready, this);\n\n      if (!length) {\n        return;\n      }\n\n      if ($.isFunction(options.build)) {\n        $this.one(EVENT_BUILD, options.build);\n      }\n\n      if (this.trigger(EVENT_BUILD).isDefaultPrevented()) {\n        return;\n      }\n\n      // Override `transition` option if it is not supported\n      if (!SUPPORT_TRANSITION) {\n        options.transition = false;\n      }\n\n      this.isImg = isImg;\n      this.length = length;\n      this.count = 0;\n      this.$images = $images;\n      this.$body = $('body');\n\n      if (options.inline) {\n        $this.one(EVENT_BUILT, $.proxy(function () {\n          this.view();\n        }, this));\n\n        $images.each(function () {\n          if (this.complete) {\n            ready();\n          } else {\n            $(this).one(EVENT_LOAD, ready);\n          }\n        });\n      } else {\n        $this.on(EVENT_CLICK, $.proxy(this.start, this));\n      }\n    },\n\n    ready: function () {\n      this.count++;\n\n      if (this.count === this.length) {\n        this.build();\n      }\n    },\n\n    build: function () {\n      var options = this.options;\n      var $this = this.$element;\n      var $parent;\n      var $viewer;\n      var $title;\n      var $toolbar;\n      var $navbar;\n      var $button;\n\n      if (this.isBuilt) {\n        return;\n      }\n\n      this.$parent = $parent = $this.parent();\n      this.$viewer = $viewer = $(Viewer.TEMPLATE);\n      this.$canvas = $viewer.find('.viewer-canvas');\n      this.$footer = $viewer.find('.viewer-footer');\n      this.$title = $title = $viewer.find('.viewer-title');\n      this.$toolbar = $toolbar = $viewer.find('.viewer-toolbar');\n      this.$navbar = $navbar = $viewer.find('.viewer-navbar');\n      this.$button = $button = $viewer.find('.viewer-button');\n      this.$tooltip = $viewer.find('.viewer-tooltip');\n      this.$player = $viewer.find('.viewer-player');\n      this.$list = $viewer.find('.viewer-list');\n\n      $title.addClass(!options.title ? CLASS_HIDE : getResponsiveClass(options.title));\n\n      $toolbar.addClass(!options.toolbar ? CLASS_HIDE : getResponsiveClass(options.toolbar));\n      $toolbar.find('li[class*=zoom]').toggleClass(CLASS_INVISIBLE, !options.zoomable);\n      $toolbar.find('li[class*=flip]').toggleClass(CLASS_INVISIBLE, !options.scalable);\n\n      if (!options.rotatable) {\n        $toolbar.find('li[class*=rotate]').addClass(CLASS_INVISIBLE).appendTo($toolbar);\n      }\n\n      $navbar.addClass(!options.navbar ? CLASS_HIDE : getResponsiveClass(options.navbar));\n      $button.toggleClass(CLASS_HIDE, !options.button);\n\n      if (options.inline) {\n        $button.addClass(CLASS_FULLSCREEN);\n        $viewer.css('z-index', options.zIndexInline);\n\n        if ($parent.css('position') === 'static') {\n          $parent.css('position', 'relative');\n        }\n      } else {\n        $button.addClass(CLASS_CLOSE);\n        $viewer.\n          css('z-index', options.zIndex).\n          addClass([CLASS_FIXED, CLASS_FADE, CLASS_HIDE].join(' '));\n      }\n\n      $this.after($viewer);\n\n      if (options.inline) {\n        this.render();\n        this.bind();\n        this.isShown = true;\n      }\n\n      this.isBuilt = true;\n\n      if ($.isFunction(options.built)) {\n        $this.one(EVENT_BUILT, options.built);\n      }\n\n      this.trigger(EVENT_BUILT);\n    },\n\n    unbuild: function () {\n      if (!this.isBuilt) {\n        return;\n      }\n\n      this.isBuilt = false;\n      this.$viewer.remove();\n    },\n\n    bind: function () {\n      var options = this.options;\n      var $this = this.$element;\n\n      if ($.isFunction(options.view)) {\n        $this.on(EVENT_VIEW, options.view);\n      }\n\n      if ($.isFunction(options.viewed)) {\n        $this.on(EVENT_VIEWED, options.viewed);\n      }\n\n      this.$viewer.\n        on(EVENT_CLICK, $.proxy(this.click, this)).\n        on(EVENT_WHEEL, $.proxy(this.wheel, this));\n\n      this.$canvas.on(EVENT_MOUSEDOWN, $.proxy(this.mousedown, this));\n\n      $document.\n        on(EVENT_MOUSEMOVE, (this._mousemove = proxy(this.mousemove, this))).\n        on(EVENT_MOUSEUP, (this._mouseup = proxy(this.mouseup, this))).\n        on(EVENT_KEYDOWN, (this._keydown = proxy(this.keydown, this)));\n\n      $window.on(EVENT_RESIZE, (this._resize = proxy(this.resize, this)));\n    },\n\n    unbind: function () {\n      var options = this.options;\n      var $this = this.$element;\n\n      if ($.isFunction(options.view)) {\n        $this.off(EVENT_VIEW, options.view);\n      }\n\n      if ($.isFunction(options.viewed)) {\n        $this.off(EVENT_VIEWED, options.viewed);\n      }\n\n      this.$viewer.\n        off(EVENT_CLICK, this.click).\n        off(EVENT_WHEEL, this.wheel);\n\n      this.$canvas.off(EVENT_MOUSEDOWN, this.mousedown);\n\n      $document.\n        off(EVENT_MOUSEMOVE, this._mousemove).\n        off(EVENT_MOUSEUP, this._mouseup).\n        off(EVENT_KEYDOWN, this._keydown);\n\n      $window.off(EVENT_RESIZE, this._resize);\n    },\n\n    render: function () {\n      this.initContainer();\n      this.initViewer();\n      this.initList();\n      this.renderViewer();\n    },\n\n    initContainer: function () {\n      this.container = {\n        width: $window.innerWidth(),\n        height: $window.innerHeight()\n      };\n    },\n\n    initViewer: function () {\n      var options = this.options;\n      var $parent = this.$parent;\n      var viewer;\n\n      if (options.inline) {\n        this.parent = viewer = {\n          width: max($parent.width(), options.minWidth),\n          height: max($parent.height(), options.minHeight)\n        };\n      }\n\n      if (this.isFulled || !viewer) {\n        viewer = this.container;\n      }\n\n      this.viewer = $.extend({}, viewer);\n    },\n\n    renderViewer: function () {\n      if (this.options.inline && !this.isFulled) {\n        this.$viewer.css(this.viewer);\n      }\n    },\n\n    initList: function () {\n      var options = this.options;\n      var $this = this.$element;\n      var $list = this.$list;\n      var list = [];\n\n      this.$images.each(function (i) {\n        var src = this.src;\n        var alt = this.alt || getImageName(src);\n        var url = options.url;\n\n        if (!src) {\n          return;\n        }\n\n        if (isString(url)) {\n          url = this.getAttribute(url);\n        } else if ($.isFunction(url)) {\n          url = url.call(this, this);\n        }\n\n        list.push(\n          '<li>' +\n            '<img' +\n              ' src=\"' + src + '\"' +\n              ' data-action=\"view\"' +\n              ' data-index=\"' +  i + '\"' +\n              ' data-original-url=\"' +  (url || src) + '\"' +\n              ' alt=\"' +  alt + '\"' +\n            '>' +\n          '</li>'\n        );\n      });\n\n      $list.html(list.join('')).find(SELECTOR_IMG).one(EVENT_LOAD, {\n        filled: true\n      }, $.proxy(this.loadImage, this));\n\n      this.$items = $list.children();\n\n      if (options.transition) {\n        $this.one(EVENT_VIEWED, function () {\n          $list.addClass(CLASS_TRANSITION);\n        });\n      }\n    },\n\n    renderList: function (index) {\n      var i = index || this.index;\n      var width = this.$items.eq(i).width();\n      var outerWidth = width + 1; // 1 pixel of `margin-left` width\n\n      // Place the active item in the center of the screen\n      this.$list.css({\n        width: outerWidth * this.length,\n        marginLeft: (this.viewer.width - width) / 2 - outerWidth * i\n      });\n    },\n\n    resetList: function () {\n      this.$list.empty().removeClass(CLASS_TRANSITION).css('margin-left', 0);\n    },\n\n    initImage: function (callback) {\n      var options = this.options;\n      var $image = this.$image;\n      var viewer = this.viewer;\n      var footerHeight = this.$footer.height();\n      var viewerWidth = viewer.width;\n      var viewerHeight = max(viewer.height - footerHeight, footerHeight);\n      var oldImage = this.image || {};\n\n      getImageSize($image[0], $.proxy(function (naturalWidth, naturalHeight) {\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = viewerWidth;\n        var height = viewerHeight;\n        var initialImage;\n        var image;\n\n        if (viewerHeight * aspectRatio > viewerWidth) {\n          height = viewerWidth / aspectRatio;\n        } else {\n          width = viewerHeight * aspectRatio;\n        }\n\n        width = min(width * 0.9, naturalWidth);\n        height = min(height * 0.9, naturalHeight);\n\n        image = {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: aspectRatio,\n          ratio: width / naturalWidth,\n          width: width,\n          height: height,\n          left: (viewerWidth - width) / 2,\n          top: (viewerHeight - height) / 2\n        };\n\n        initialImage = $.extend({}, image);\n\n        if (options.rotatable) {\n          image.rotate = oldImage.rotate || 0;\n          initialImage.rotate = 0;\n        }\n\n        if (options.scalable) {\n          image.scaleX = oldImage.scaleX || 1;\n          image.scaleY = oldImage.scaleY || 1;\n          initialImage.scaleX = 1;\n          initialImage.scaleY = 1;\n        }\n\n        this.image = image;\n        this.initialImage = initialImage;\n\n        if ($.isFunction(callback)) {\n          callback();\n        }\n      }, this));\n    },\n\n    renderImage: function (callback) {\n      var image = this.image;\n      var $image = this.$image;\n\n      $image.css({\n        width: image.width,\n        height: image.height,\n        marginLeft: image.left,\n        marginTop: image.top,\n        transform: getTransform(image)\n      });\n\n      if ($.isFunction(callback)) {\n        if (this.transitioning) {\n          $image.one(EVENT_TRANSITIONEND, callback);\n        } else {\n          callback();\n        }\n      }\n    },\n\n    resetImage: function () {\n      if (this.$image) {\n        this.$image.remove();\n        this.$image = null;\n      }\n    },\n\n    start: function (e) {\n      var target = e.target;\n\n      if ($(target).is('img')) {\n        this.target = target;\n        this.show();\n      }\n    },\n\n    click: function (e) {\n      var $target = $(e.target);\n      var action = $target.data('action');\n      var image = this.image;\n\n      switch (action) {\n        case 'mix':\n          if (this.isPlayed) {\n            this.stop();\n          } else {\n            if (this.options.inline) {\n              if (this.isFulled) {\n                this.exit();\n              } else {\n                this.full();\n              }\n            } else {\n              this.hide();\n            }\n          }\n\n          break;\n\n        case 'view':\n          this.view($target.data('index'));\n          break;\n\n        case 'zoom-in':\n          this.zoom(0.1, true);\n          break;\n\n        case 'zoom-out':\n          this.zoom(-0.1, true);\n          break;\n\n        case 'one-to-one':\n          this.toggle();\n          break;\n\n        case 'reset':\n          this.reset();\n          break;\n\n        case 'prev':\n          this.prev();\n          break;\n\n        case 'play':\n          this.play();\n          break;\n\n        case 'next':\n          this.next();\n          break;\n\n        case 'rotate-left':\n          this.rotate(-90);\n          break;\n\n        case 'rotate-right':\n          this.rotate(90);\n          break;\n\n        case 'flip-horizontal':\n          this.scaleX(-image.scaleX || -1);\n          break;\n\n        case 'flip-vertical':\n          this.scaleY(-image.scaleY || -1);\n          break;\n\n        default:\n          if (this.isPlayed) {\n            this.stop();\n          }\n      }\n    },\n\n    load: function () {\n      var options = this.options;\n      var viewer = this.viewer;\n      var $image = this.$image;\n\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = false;\n      }\n\n      $image.removeClass(CLASS_INVISIBLE).css('cssText', (\n        'width:0;' +\n        'height:0;' +\n        'margin-left:' + viewer.width / 2 + 'px;' +\n        'margin-top:' + viewer.height / 2 + 'px;' +\n        'max-width:none!important;' +\n        'visibility:visible;'\n      ));\n\n      this.initImage($.proxy(function () {\n        $image.\n          toggleClass(CLASS_TRANSITION, options.transition).\n          toggleClass(CLASS_MOVE, options.movable);\n\n        this.renderImage($.proxy(function () {\n          this.isViewed = true;\n          this.trigger(EVENT_VIEWED);\n        }, this));\n      }, this));\n    },\n\n    loadImage: function (e) {\n      var image = e.target;\n      var $image = $(image);\n      var $parent = $image.parent();\n      var parentWidth = $parent.width();\n      var parentHeight = $parent.height();\n      var filled = e.data && e.data.filled;\n\n      getImageSize(image, function (naturalWidth, naturalHeight) {\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = parentWidth;\n        var height = parentHeight;\n\n        if (parentHeight * aspectRatio > parentWidth) {\n          if (filled) {\n            width = parentHeight * aspectRatio;\n          } else {\n            height = parentWidth / aspectRatio;\n          }\n        } else {\n          if (filled) {\n            height = parentWidth / aspectRatio;\n          } else {\n            width = parentHeight * aspectRatio;\n          }\n        }\n\n        $image.css({\n          width: width,\n          height: height,\n          marginLeft: (parentWidth - width) / 2,\n          marginTop: (parentHeight - height) / 2\n        });\n      });\n    },\n\n    resize: function () {\n      this.initContainer();\n      this.initViewer();\n      this.renderViewer();\n      this.renderList();\n\n      if (this.isViewed) {\n        this.initImage($.proxy(function () {\n          this.renderImage();\n        }, this));\n      }\n\n      if (this.isPlayed) {\n        this.$player.\n          find(SELECTOR_IMG).\n          one(EVENT_LOAD, $.proxy(this.loadImage, this)).\n          trigger(EVENT_LOAD);\n      }\n    },\n\n    wheel: function (event) {\n      var e = event.originalEvent || event;\n      var ratio = num(this.options.zoomRatio) || 0.1;\n      var delta = 1;\n\n      if (!this.isViewed) {\n        return;\n      }\n\n      event.preventDefault();\n\n      // Limit wheel speed to prevent zoom too fast\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n\n      setTimeout($.proxy(function () {\n        this.wheeling = false;\n      }, this), 50);\n\n      if (e.deltaY) {\n        delta = e.deltaY > 0 ? 1 : -1;\n      } else if (e.wheelDelta) {\n        delta = -e.wheelDelta / 120;\n      } else if (e.detail) {\n        delta = e.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, true, event);\n    },\n\n    keydown: function (e) {\n      var options = this.options;\n      var which = e.which;\n\n      if (!this.isFulled || !options.keyboard) {\n        return;\n      }\n\n      switch (which) {\n\n        // (Key: Esc)\n        case 27:\n          if (this.isPlayed) {\n            this.stop();\n          } else {\n            if (options.inline) {\n              if (this.isFulled) {\n                this.exit();\n              }\n            } else {\n              this.hide();\n            }\n          }\n\n          break;\n\n        // (Key: Space)\n        case 32:\n          if (this.isPlayed) {\n            this.stop();\n          }\n\n          break;\n\n        // View previous (Key: ←)\n        case 37:\n          this.prev();\n          break;\n\n        // Zoom in (Key: ↑)\n        case 38:\n\n          // Prevent scroll on Firefox\n          e.preventDefault();\n\n          this.zoom(options.zoomRatio, true);\n          break;\n\n        // View next (Key: →)\n        case 39:\n          this.next();\n          break;\n\n        // Zoom out (Key: ↓)\n        case 40:\n\n          // Prevent scroll on Firefox\n          e.preventDefault();\n\n          this.zoom(-options.zoomRatio, true);\n          break;\n\n        // Zoom out to initial size (Key: Ctrl + 0)\n        case 48:\n          // Go to next\n\n        // Zoom in to natural size (Key: Ctrl + 1)\n        case 49:\n          if (e.ctrlKey || e.shiftKey) {\n            e.preventDefault();\n            this.toggle();\n          }\n\n          break;\n\n        // No default\n      }\n    },\n\n    mousedown: function (event) {\n      var options = this.options;\n      var originalEvent = event.originalEvent;\n      var touches = originalEvent && originalEvent.touches;\n      var e = event;\n      var action = options.movable ? 'move' : false;\n      var touchesLength;\n\n      if (!this.isViewed) {\n        return;\n      }\n\n      if (touches) {\n        touchesLength = touches.length;\n\n        if (touchesLength > 1) {\n          if (options.zoomable && touchesLength === 2) {\n            e = touches[1];\n            this.startX2 = e.pageX;\n            this.startY2 = e.pageY;\n            action = 'zoom';\n          } else {\n            return;\n          }\n        } else {\n          if (this.isSwitchable()) {\n            action = 'switch';\n          }\n        }\n\n        e = touches[0];\n      }\n\n      if (action) {\n        event.preventDefault();\n        this.action = action;\n\n        // IE8  has `event.pageX/Y`, but not `event.originalEvent.pageX/Y`\n        // IE10 has `event.originalEvent.pageX/Y`, but not `event.pageX/Y`\n        this.startX = e.pageX || originalEvent && originalEvent.pageX;\n        this.startY = e.pageY || originalEvent && originalEvent.pageY;\n      }\n    },\n\n    mousemove: function (event) {\n      var options = this.options;\n      var action = this.action;\n      var $image = this.$image;\n      var originalEvent = event.originalEvent;\n      var touches = originalEvent && originalEvent.touches;\n      var e = event;\n      var touchesLength;\n\n      if (!this.isViewed) {\n        return;\n      }\n\n      if (touches) {\n        touchesLength = touches.length;\n\n        if (touchesLength > 1) {\n          if (options.zoomable && touchesLength === 2) {\n            e = touches[1];\n            this.endX2 = e.pageX;\n            this.endY2 = e.pageY;\n          } else {\n            return;\n          }\n        }\n\n        e = touches[0];\n      }\n\n      if (action) {\n        event.preventDefault();\n\n        if (action === 'move' && options.transition && $image.hasClass(CLASS_TRANSITION)) {\n          $image.removeClass(CLASS_TRANSITION);\n        }\n\n        this.endX = e.pageX || originalEvent && originalEvent.pageX;\n        this.endY = e.pageY || originalEvent && originalEvent.pageY;\n\n        this.change(event);\n      }\n    },\n\n    mouseup: function (event) {\n      var action = this.action;\n\n      if (action) {\n        event.preventDefault();\n\n        if (action === 'move' && this.options.transition) {\n          this.$image.addClass(CLASS_TRANSITION);\n        }\n\n        this.action = false;\n      }\n    },\n\n    // Show the viewer (only available in modal mode)\n    show: function () {\n      var options = this.options;\n      var $viewer;\n\n      if (options.inline || this.transitioning) {\n        return;\n      }\n\n      if (!this.isBuilt) {\n        this.build();\n      }\n\n      if ($.isFunction(options.show)) {\n        this.$element.one(EVENT_SHOW, options.show);\n      }\n\n      if (this.trigger(EVENT_SHOW).isDefaultPrevented()) {\n        return;\n      }\n\n      this.$body.addClass(CLASS_OPEN);\n      $viewer = this.$viewer.removeClass(CLASS_HIDE);\n\n      this.$element.one(EVENT_SHOWN, $.proxy(function () {\n        this.view(this.target ? this.$images.index(this.target) : this.index);\n        this.target = false;\n      }, this));\n\n      if (options.transition) {\n        this.transitioning = true;\n        $viewer.addClass(CLASS_TRANSITION);\n        forceReflow($viewer[0]);\n        $viewer.one(EVENT_TRANSITIONEND, $.proxy(this.shown, this)).addClass(CLASS_IN);\n      } else {\n        $viewer.addClass(CLASS_IN);\n        this.shown();\n      }\n    },\n\n    // Hide the viewer (only available in modal mode)\n    hide: function () {\n      var options = this.options;\n      var $viewer = this.$viewer;\n\n      if (options.inline || this.transitioning || !this.isShown) {\n        return;\n      }\n\n      if ($.isFunction(options.hide)) {\n        this.$element.one(EVENT_HIDE, options.hide);\n      }\n\n      if (this.trigger(EVENT_HIDE).isDefaultPrevented()) {\n        return;\n      }\n\n      if (this.isViewed && options.transition) {\n        this.transitioning = true;\n        this.$image.one(EVENT_TRANSITIONEND, $.proxy(function () {\n          $viewer.one(EVENT_TRANSITIONEND, $.proxy(this.hidden, this)).removeClass(CLASS_IN);\n        }, this));\n        this.zoomTo(0, false, false, true);\n      } else {\n        $viewer.removeClass(CLASS_IN);\n        this.hidden();\n      }\n    },\n\n    /**\n     * View one of the images with image's index\n     *\n     * @param {Number} index\n     */\n    view: function (index) {\n      var $title = this.$title;\n      var $image;\n      var $item;\n      var $img;\n      var url;\n      var alt;\n\n      index = Number(index) || 0;\n\n      if (!this.isShown || this.isPlayed || index < 0 || index >= this.length ||\n        this.isViewed && index === this.index) {\n        return;\n      }\n\n      if (this.trigger(EVENT_VIEW).isDefaultPrevented()) {\n        return;\n      }\n\n      $item = this.$items.eq(index);\n      $img = $item.find(SELECTOR_IMG);\n      url = $img.data('originalUrl');\n      alt = $img.attr('alt');\n\n      this.$image = $image = $('<img src=\"' + url + '\" alt=\"' + alt + '\">');\n\n      if (this.isViewed) {\n        this.$items.eq(this.index).removeClass(CLASS_ACTIVE);\n      }\n\n      $item.addClass(CLASS_ACTIVE);\n\n      this.isViewed = false;\n      this.index = index;\n      this.image = null;\n      this.$canvas.html($image.addClass(CLASS_INVISIBLE));\n\n      // Center current item\n      this.renderList();\n\n      // Clear title\n      $title.empty();\n\n      // Generate title after viewed\n      this.$element.one(EVENT_VIEWED, $.proxy(function () {\n        var image = this.image;\n        var width = image.naturalWidth;\n        var height = image.naturalHeight;\n\n        $title.html(alt + ' (' + width + ' &times; ' + height + ')');\n      }, this));\n\n      if ($image[0].complete) {\n        this.load();\n      } else {\n        $image.one(EVENT_LOAD, $.proxy(this.load, this));\n\n        if (this.timeout) {\n          clearTimeout(this.timeout);\n        }\n\n        // Make the image visible if it fails to load within 1s\n        this.timeout = setTimeout($.proxy(function () {\n          $image.removeClass(CLASS_INVISIBLE);\n          this.timeout = false;\n        }, this), 1000);\n      }\n    },\n\n    // View the previous image\n    prev: function () {\n      this.view(max(this.index - 1, 0));\n    },\n\n    // View the next image\n    next: function () {\n      this.view(min(this.index + 1, this.length - 1));\n    },\n\n    /**\n     * Move the image with relative offsets\n     *\n     * @param {Number} offsetX\n     * @param {Number} offsetY (optional)\n     */\n    move: function (offsetX, offsetY) {\n      var image = this.image;\n\n      this.moveTo(\n        isUndefined(offsetX) ? offsetX : image.left + num(offsetX),\n        isUndefined(offsetY) ? offsetY : image.top + num(offsetY)\n      );\n    },\n\n    /**\n     * Move the image to an absolute point\n     *\n     * @param {Number} x\n     * @param {Number} y (optional)\n     */\n    moveTo: function (x, y) {\n      var image = this.image;\n      var changed = false;\n\n      // If \"y\" is not present, its default value is \"x\"\n      if (isUndefined(y)) {\n        y = x;\n      }\n\n      x = num(x);\n      y = num(y);\n\n      if (this.isViewed && !this.isPlayed && this.options.movable) {\n        if (isNumber(x)) {\n          image.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          image.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderImage();\n        }\n      }\n    },\n\n    /**\n     * Zoom the image with a relative ratio\n     *\n     * @param {Number} ratio\n     * @param {Boolean} hasTooltip (optional)\n     * @param {jQuery Event} _event (private)\n     */\n    zoom: function (ratio, hasTooltip, _event) {\n      var image = this.image;\n\n      ratio = num(ratio);\n\n      if (ratio < 0) {\n        ratio =  1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      this.zoomTo(image.width * ratio / image.naturalWidth, hasTooltip, _event);\n    },\n\n    /**\n     * Zoom the image to an absolute ratio\n     *\n     * @param {Number} ratio\n     * @param {Boolean} hasTooltip (optional)\n     * @param {jQuery Event} _event (private)\n     * @param {Boolean} _zoomable (private)\n     */\n    zoomTo: function (ratio, hasTooltip, _event, _zoomable) {\n      var options = this.options;\n      var minZoomRatio = 0.01;\n      var maxZoomRatio = 100;\n      var image = this.image;\n      var width = image.width;\n      var height = image.height;\n      var originalEvent;\n      var newWidth;\n      var newHeight;\n      var offset;\n      var center;\n\n      ratio = max(0, ratio);\n\n      if (isNumber(ratio) && this.isViewed && !this.isPlayed && (_zoomable || options.zoomable)) {\n        if (!_zoomable) {\n          minZoomRatio = max(minZoomRatio, options.minZoomRatio);\n          maxZoomRatio = min(maxZoomRatio, options.maxZoomRatio);\n          ratio = min(max(ratio, minZoomRatio), maxZoomRatio);\n        }\n\n        if (ratio > 0.95 && ratio < 1.05) {\n          ratio = 1;\n        }\n\n        newWidth = image.naturalWidth * ratio;\n        newHeight = image.naturalHeight * ratio;\n\n        if (_event && (originalEvent = _event.originalEvent)) {\n          offset = this.$viewer.offset();\n          center = originalEvent.touches ? getTouchesCenter(originalEvent.touches) : {\n            pageX: _event.pageX || originalEvent.pageX || 0,\n            pageY: _event.pageY || originalEvent.pageY || 0\n          };\n\n          // Zoom from the triggering point of the event\n          image.left -= (newWidth - width) * (\n            ((center.pageX - offset.left) - image.left) / width\n          );\n          image.top -= (newHeight - height) * (\n            ((center.pageY - offset.top) - image.top) / height\n          );\n        } else {\n\n          // Zoom from the center of the image\n          image.left -= (newWidth - width) / 2;\n          image.top -= (newHeight - height) / 2;\n        }\n\n        image.width = newWidth;\n        image.height = newHeight;\n        image.ratio = ratio;\n        this.renderImage();\n\n        if (hasTooltip) {\n          this.tooltip();\n        }\n      }\n    },\n\n    /**\n     * Rotate the image with a relative degree\n     *\n     * @param {Number} degree\n     */\n    rotate: function (degree) {\n      this.rotateTo((this.image.rotate || 0) + num(degree));\n    },\n\n    /**\n     * Rotate the image to an absolute degree\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#rotate()\n     *\n     * @param {Number} degree\n     */\n    rotateTo: function (degree) {\n      var image = this.image;\n\n      degree = num(degree);\n\n      if (isNumber(degree) && this.isViewed && !this.isPlayed && this.options.rotatable) {\n        image.rotate = degree;\n        this.renderImage();\n      }\n    },\n\n    /**\n     * Scale the image\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#scale()\n     *\n     * @param {Number} scaleX\n     * @param {Number} scaleY (optional)\n     */\n    scale: function (scaleX, scaleY) {\n      var image = this.image;\n      var changed = false;\n\n      // If \"scaleY\" is not present, its default value is \"scaleX\"\n      if (isUndefined(scaleY)) {\n        scaleY = scaleX;\n      }\n\n      scaleX = num(scaleX);\n      scaleY = num(scaleY);\n\n      if (this.isViewed && !this.isPlayed && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          image.scaleX = scaleX;\n          changed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          image.scaleY = scaleY;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderImage();\n        }\n      }\n    },\n\n    /**\n     * Scale the abscissa of the image\n     *\n     * @param {Number} scaleX\n     */\n    scaleX: function (scaleX) {\n      this.scale(scaleX, this.image.scaleY);\n    },\n\n    /**\n     * Scale the ordinate of the image\n     *\n     * @param {Number} scaleY\n     */\n    scaleY: function (scaleY) {\n      this.scale(this.image.scaleX, scaleY);\n    },\n\n    // Play the images\n    play: function () {\n      var options = this.options;\n      var $player = this.$player;\n      var load = $.proxy(this.loadImage, this);\n      var list = [];\n      var total = 0;\n      var index = 0;\n      var playing;\n\n      if (!this.isShown || this.isPlayed) {\n        return;\n      }\n\n      if (options.fullscreen) {\n        this.requestFullscreen();\n      }\n\n      this.isPlayed = true;\n      $player.addClass(CLASS_SHOW);\n\n      this.$items.each(function (i) {\n        var $this = $(this);\n        var $img = $this.find(SELECTOR_IMG);\n        var $image = $('<img src=\"' + $img.data('originalUrl') + '\" alt=\"' + $img.attr('alt') + '\">');\n\n        total++;\n\n        $image.addClass(CLASS_FADE).toggleClass(CLASS_TRANSITION, options.transition);\n\n        if ($this.hasClass(CLASS_ACTIVE)) {\n          $image.addClass(CLASS_IN);\n          index = i;\n        }\n\n        list.push($image);\n        $image.one(EVENT_LOAD, {\n          filled: false\n        }, load);\n        $player.append($image);\n      });\n\n      if (isNumber(options.interval) && options.interval > 0) {\n        playing = $.proxy(function () {\n          this.playing = setTimeout(function () {\n            list[index].removeClass(CLASS_IN);\n            index++;\n            index = index < total ? index : 0;\n            list[index].addClass(CLASS_IN);\n\n            playing();\n          }, options.interval);\n        }, this);\n\n        if (total > 1) {\n          playing();\n        }\n      }\n    },\n\n    // Stop play\n    stop: function () {\n      if (!this.isPlayed) {\n        return;\n      }\n\n      if (this.options.fullscreen) {\n        this.exitFullscreen();\n      }\n\n      this.isPlayed = false;\n      clearTimeout(this.playing);\n      this.$player.removeClass(CLASS_SHOW).empty();\n    },\n\n    // Enter modal mode (only available in inline mode)\n    full: function () {\n      var options = this.options;\n      var $image = this.$image;\n      var $list = this.$list;\n\n      if (!this.isShown || this.isPlayed || this.isFulled || !options.inline) {\n        return;\n      }\n\n      this.isFulled = true;\n      this.$body.addClass(CLASS_OPEN);\n      this.$button.addClass(CLASS_FULLSCREEN_EXIT);\n\n      if (options.transition) {\n        $image.removeClass(CLASS_TRANSITION);\n        $list.removeClass(CLASS_TRANSITION);\n      }\n\n      this.$viewer.addClass(CLASS_FIXED).removeAttr('style').css('z-index', options.zIndex);\n      this.initContainer();\n      this.viewer = $.extend({}, this.container);\n      this.renderList();\n      this.initImage($.proxy(function () {\n        this.renderImage(function () {\n          if (options.transition) {\n            setTimeout(function () {\n              $image.addClass(CLASS_TRANSITION);\n              $list.addClass(CLASS_TRANSITION);\n            }, 0);\n          }\n        });\n      }, this));\n    },\n\n    // Exit modal mode (only available in inline mode)\n    exit: function () {\n      var options = this.options;\n      var $image = this.$image;\n      var $list = this.$list;\n\n      if (!this.isFulled) {\n        return;\n      }\n\n      this.isFulled = false;\n      this.$body.removeClass(CLASS_OPEN);\n      this.$button.removeClass(CLASS_FULLSCREEN_EXIT);\n\n      if (options.transition) {\n        $image.removeClass(CLASS_TRANSITION);\n        $list.removeClass(CLASS_TRANSITION);\n      }\n\n      this.$viewer.removeClass(CLASS_FIXED).css('z-index', options.zIndexInline);\n      this.viewer = $.extend({}, this.parent);\n      this.renderViewer();\n      this.renderList();\n      this.initImage($.proxy(function () {\n        this.renderImage(function () {\n          if (options.transition) {\n            setTimeout(function () {\n              $image.addClass(CLASS_TRANSITION);\n              $list.addClass(CLASS_TRANSITION);\n            }, 0);\n          }\n        });\n      }, this));\n    },\n\n    // Show the current ratio of the image with percentage\n    tooltip: function () {\n      var options = this.options;\n      var $tooltip = this.$tooltip;\n      var image = this.image;\n      var classes = [\n            CLASS_SHOW,\n            CLASS_FADE,\n            CLASS_TRANSITION\n          ].join(' ');\n\n      if (!this.isViewed || this.isPlayed || !options.tooltip) {\n        return;\n      }\n\n      $tooltip.text(round(image.ratio * 100) + '%');\n\n      if (!this.tooltiping) {\n        if (options.transition) {\n          if (this.fading) {\n            $tooltip.trigger(EVENT_TRANSITIONEND);\n          }\n\n          $tooltip.addClass(classes);\n          forceReflow($tooltip[0]);\n          $tooltip.addClass(CLASS_IN);\n        } else {\n          $tooltip.addClass(CLASS_SHOW);\n        }\n      } else {\n        clearTimeout(this.tooltiping);\n      }\n\n      this.tooltiping = setTimeout($.proxy(function () {\n        if (options.transition) {\n          $tooltip.one(EVENT_TRANSITIONEND, $.proxy(function () {\n            $tooltip.removeClass(classes);\n            this.fading = false;\n          }, this)).removeClass(CLASS_IN);\n\n          this.fading = true;\n        } else {\n          $tooltip.removeClass(CLASS_SHOW);\n        }\n\n        this.tooltiping = false;\n      }, this), 1000);\n    },\n\n    // Toggle the image size between its natural size and initial size\n    toggle: function () {\n      if (this.image.ratio === 1) {\n        this.zoomTo(this.initialImage.ratio, true);\n      } else {\n        this.zoomTo(1, true);\n      }\n    },\n\n    // Reset the image to its initial state\n    reset: function () {\n      if (this.isViewed && !this.isPlayed) {\n        this.image = $.extend({}, this.initialImage);\n        this.renderImage();\n      }\n    },\n\n    // Update viewer when images changed\n    update: function () {\n      var $this = this.$element;\n      var $images = this.$images;\n      var indexes = [];\n      var index;\n\n      if (this.isImg) {\n\n        // Destroy viewer if the target image was deleted\n        if (!$this.parent().length) {\n          return this.destroy();\n        }\n      } else {\n        this.$images = $images = $this.find(SELECTOR_IMG);\n        this.length = $images.length;\n      }\n\n      if (this.isBuilt) {\n        $.each(this.$items, function (i) {\n          var img = $(this).find('img')[0];\n          var image = $images[i];\n\n          if (image) {\n            if (image.src !== img.src) {\n              indexes.push(i);\n            }\n          } else {\n            indexes.push(i);\n          }\n        });\n\n        this.$list.width('auto');\n        this.initList();\n\n        if (this.isShown) {\n          if (this.length) {\n            if (this.isViewed) {\n              index = $.inArray(this.index, indexes);\n\n              if (index >= 0) {\n                this.isViewed = false;\n                this.view(max(this.index - (index + 1), 0));\n              } else {\n                this.$items.eq(this.index).addClass(CLASS_ACTIVE);\n              }\n            }\n          } else {\n            this.$image = null;\n            this.isViewed = false;\n            this.index = 0;\n            this.image = null;\n            this.$canvas.empty();\n            this.$title.empty();\n          }\n        }\n      }\n    },\n\n    // Destroy the viewer\n    destroy: function () {\n      var $this = this.$element;\n\n      if (this.options.inline) {\n        this.unbind();\n      } else {\n        if (this.isShown) {\n          this.unbind();\n        }\n\n        $this.off(EVENT_CLICK, this.start);\n      }\n\n      this.unbuild();\n      $this.removeData(NAMESPACE);\n    },\n\n    // A shortcut for triggering custom events\n    trigger: function (type, data) {\n      var e = $.Event(type, data);\n\n      this.$element.trigger(e);\n\n      return e;\n    },\n\n    shown: function () {\n      var options = this.options;\n\n      this.transitioning = false;\n      this.isFulled = true;\n      this.isShown = true;\n      this.isVisible = true;\n      this.render();\n      this.bind();\n\n      if ($.isFunction(options.shown)) {\n        this.$element.one(EVENT_SHOWN, options.shown);\n      }\n\n      this.trigger(EVENT_SHOWN);\n    },\n\n    hidden: function () {\n      var options = this.options;\n\n      this.transitioning = false;\n      this.isViewed = false;\n      this.isFulled = false;\n      this.isShown = false;\n      this.isVisible = false;\n      this.unbind();\n      this.$body.removeClass(CLASS_OPEN);\n      this.$viewer.addClass(CLASS_HIDE);\n      this.resetList();\n      this.resetImage();\n\n      if ($.isFunction(options.hidden)) {\n        this.$element.one(EVENT_HIDDEN, options.hidden);\n      }\n\n      this.trigger(EVENT_HIDDEN);\n    },\n\n    requestFullscreen: function () {\n      var documentElement = document.documentElement;\n\n      if (this.isFulled && !document.fullscreenElement && !document.mozFullScreenElement &&\n        !document.webkitFullscreenElement && !document.msFullscreenElement) {\n\n        if (documentElement.requestFullscreen) {\n          documentElement.requestFullscreen();\n        } else if (documentElement.msRequestFullscreen) {\n          documentElement.msRequestFullscreen();\n        } else if (documentElement.mozRequestFullScreen) {\n          documentElement.mozRequestFullScreen();\n        } else if (documentElement.webkitRequestFullscreen) {\n          documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n        }\n      }\n    },\n\n    exitFullscreen: function () {\n      if (this.isFulled) {\n        if (document.exitFullscreen) {\n          document.exitFullscreen();\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n          document.webkitExitFullscreen();\n        }\n      }\n    },\n\n    change: function (event) {\n      var offsetX = this.endX - this.startX;\n      var offsetY = this.endY - this.startY;\n\n      switch (this.action) {\n\n        // Move the current image\n        case 'move':\n          this.move(offsetX, offsetY);\n          break;\n\n        // Zoom the current image\n        case 'zoom':\n          this.zoom(function (x1, y1, x2, y2) {\n            var z1 = sqrt(x1 * x1 + y1 * y1);\n            var z2 = sqrt(x2 * x2 + y2 * y2);\n\n            return (z2 - z1) / z1;\n          }(\n            abs(this.startX - this.startX2),\n            abs(this.startY - this.startY2),\n            abs(this.endX - this.endX2),\n            abs(this.endY - this.endY2)\n          ), false, event);\n\n          this.startX2 = this.endX2;\n          this.startY2 = this.endY2;\n          break;\n\n        case 'switch':\n          this.action = 'switched';\n\n          if (abs(offsetX) > abs(offsetY)) {\n            if (offsetX > 1) {\n              this.prev();\n            } else if (offsetX < -1) {\n              this.next();\n            }\n          }\n\n          break;\n\n        // No default\n      }\n\n      // Override\n      this.startX = this.endX;\n      this.startY = this.endY;\n    },\n\n    isSwitchable: function () {\n      var image = this.image;\n      var viewer = this.viewer;\n\n      return (image.left >= 0 && image.top >= 0 && image.width <= viewer.width &&\n        image.height <= viewer.height);\n    }\n  };\n\n  Viewer.DEFAULTS = {\n    // Enable inline mode\n    inline: false,\n\n    // Show the button on the top-right of the viewer\n    button: true,\n\n    // Show the navbar\n    navbar: true,\n\n    // Show the title\n    title: true,\n\n    // Show the toolbar\n    toolbar: true,\n\n    // Show the tooltip with image ratio (percentage) when zoom in or zoom out\n    tooltip: true,\n\n    // Enable to move the image\n    movable: true,\n\n    // Enable to zoom the image\n    zoomable: true,\n\n    // Enable to rotate the image\n    rotatable: true,\n\n    // Enable to scale the image\n    scalable: true,\n\n    // Enable CSS3 Transition for some special elements\n    transition: true,\n\n    // Enable to request fullscreen when play\n    fullscreen: true,\n\n    // Enable keyboard support\n    keyboard: true,\n\n    // Define interval of each image when playing\n    interval: 5000,\n\n    // Min width of the viewer in inline mode\n    minWidth: 200,\n\n    // Min height of the viewer in inline mode\n    minHeight: 100,\n\n    // Define the ratio when zoom the image by wheeling mouse\n    zoomRatio: 0.1,\n\n    // Define the min ratio of the image when zoom out\n    minZoomRatio: 0.01,\n\n    // Define the max ratio of the image when zoom in\n    maxZoomRatio: 100,\n\n    // Define the CSS `z-index` value of viewer in modal mode.\n    zIndex: 2015,\n\n    // Define the CSS `z-index` value of viewer in inline mode.\n    zIndexInline: 0,\n\n    // Define where to get the original image URL for viewing\n    // Type: String (an image attribute) or Function (should return an image URL)\n    url: 'src',\n\n    // Event shortcuts\n    build: null,\n    built: null,\n    show: null,\n    shown: null,\n    hide: null,\n    hidden: null,\n    view: null,\n    viewed: null\n  };\n\n  Viewer.setDefaults = function (options) {\n    $.extend(Viewer.DEFAULTS, options);\n  };\n\n  Viewer.TEMPLATE = (\n    '<div class=\"viewer-container\">' +\n      '<div class=\"viewer-canvas\"></div>' +\n      '<div class=\"viewer-footer\">' +\n        '<div class=\"viewer-title\"></div>' +\n        '<ul class=\"viewer-toolbar\">' +\n          '<li class=\"viewer-zoom-in\" data-action=\"zoom-in\"></li>' +\n          '<li class=\"viewer-zoom-out\" data-action=\"zoom-out\"></li>' +\n          '<li class=\"viewer-one-to-one\" data-action=\"one-to-one\"></li>' +\n          '<li class=\"viewer-reset\" data-action=\"reset\"></li>' +\n          '<li class=\"viewer-prev\" data-action=\"prev\"></li>' +\n          '<li class=\"viewer-play\" data-action=\"play\"></li>' +\n          '<li class=\"viewer-next\" data-action=\"next\"></li>' +\n          '<li class=\"viewer-rotate-left\" data-action=\"rotate-left\"></li>' +\n          '<li class=\"viewer-rotate-right\" data-action=\"rotate-right\"></li>' +\n          '<li class=\"viewer-flip-horizontal\" data-action=\"flip-horizontal\"></li>' +\n          '<li class=\"viewer-flip-vertical\" data-action=\"flip-vertical\"></li>' +\n        '</ul>' +\n        '<div class=\"viewer-navbar\">' +\n          '<ul class=\"viewer-list\"></ul>' +\n        '</div>' +\n      '</div>' +\n      '<div class=\"viewer-tooltip\"></div>' +\n      '<div class=\"viewer-button\" data-action=\"mix\"></div>' +\n      '<div class=\"viewer-player\"></div>' +\n    '</div>'\n  );\n\n  // Save the other viewer\n  Viewer.other = $.fn.viewer;\n\n  // Register as jQuery plugin\n  $.fn.viewer = function (options) {\n    var args = toArray(arguments, 1);\n    var result;\n\n    this.each(function () {\n      var $this = $(this);\n      var data = $this.data(NAMESPACE);\n      var fn;\n\n      if (!data) {\n        if (/destroy|hide|exit|stop|reset/.test(options)) {\n          return;\n        }\n\n        $this.data(NAMESPACE, (data = new Viewer(this, options)));\n      }\n\n      if (isString(options) && $.isFunction(fn = data[options])) {\n        result = fn.apply(data, args);\n      }\n    });\n\n    return isUndefined(result) ? this : result;\n  };\n\n  $.fn.viewer.Constructor = Viewer;\n  $.fn.viewer.setDefaults = Viewer.setDefaults;\n\n  // No conflict\n  $.fn.viewer.noConflict = function () {\n    $.fn.viewer = Viewer.other;\n    return this;\n  };\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/imageviewer/dist/viewer.js\n ** module id = 52\n ** module chunks = 2\n **/","var Viewers = {\r\n    run: function () {\r\n\t\t$.fn.viewer.setDefaults({\r\n\t\t\t'navbar': false,\r\n\t\t\t'title': false,\r\n\t\t\t'tooltip': false,\r\n\t\t\t'rotatable': false,\r\n\t\t\t'scalable': false,\r\n\t\t\t'fullscreen': false\r\n\t\t});\r\n\t\t$('.js-viewer').viewer();\r\n\t\t$('.js-viewer-wrapper').on('click', function(){\r\n\t\t\tvar img = '<img class=\"js-viewer-fullimg hidden\" src=\"'+$(this).attr('data-fullimg')+'\"/>';\r\n\t\t\t$('.viewer-placeholder').html(img);\r\n\t\t\t$().viewer('update');\r\n\t\t\t$('.js-viewer-fullimg').viewer('show');\r\n\t\t});\r\n\t\t$('.viewer-close').on('click', function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\t$().viewer('hide');\r\n\t\t});\r\n    }\r\n};\r\n\r\nmodule.exports = Viewers;\n\n\n/** WEBPACK FOOTER **\n ** ./js/viewers.js\n **/"],"sourceRoot":""}